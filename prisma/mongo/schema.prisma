// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Question {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  topic     Topic
  tags      Tag[]    @relation(fields: [tagIds], references: [id])
  tagIds    String[] @db.ObjectId
  text      String
  solution  String
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?  @unique @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@index([topic, updatedAt])
}

model PrivateQuestion {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  topic     Topic
  tags      Tag[]    @relation(fields: [tagIds], references: [id])
  tagIds    String[] @db.ObjectId
  text      String
  solution  String
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?  @unique @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@index([topic, updatedAt])
}

model Tag {
  id                 String            @id @default(auto()) @map("_id") @db.ObjectId
  name               String
  questions          Question[]        @relation(fields: [questionIds], references: [id])
  questionIds        String[]          @db.ObjectId
  privateQuestions   PrivateQuestion[] @relation(fields: [privateQuestionIds], references: [id])
  privateQuestionIds String[]          @db.ObjectId
}

model User {
  id               String            @id @default(auto()) @map("_id") @db.ObjectId
  email            String            @unique
  name             String
  role             UserRole          @default(USER)
  questions        Question[]
  privateQuestions PrivateQuestion[]
}

enum Topic {
  NUM
  ALG
  MEAS
  GEO
  STAT
  PROB
  CALC
}

enum UserRole {
  ADMIN
  MANAGER
  USER
}
